build-last-errors="[{\"column\":0,\"line\":45,\"log_line\":-1,\"log_path\":\"\",\"message\":\"http connection multiple\",\"path\":\"~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds_login.R\",\"show_error_list\":true,\"type\":0},{\"column\":0,\"line\":58,\"log_line\":-1,\"log_path\":\"\",\"message\":\"https connection multiple\",\"path\":\"~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds_login.R\",\"show_error_list\":true,\"type\":0},{\"column\":0,\"line\":64,\"log_line\":-1,\"log_path\":\"\",\"message\":\"https connection single\",\"path\":\"~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds_login.R\",\"show_error_list\":true,\"type\":0},{\"column\":0,\"line\":15,\"log_line\":-1,\"log_path\":\"\",\"message\":\"(unknown)\",\"path\":\"~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds.find.variable.R\",\"show_error_list\":true,\"type\":0}]"
build-last-errors-base-dir="~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/"
build-last-outputs="[{\"output\":\"==> devtools::test()\\n\\n\",\"type\":0},{\"output\":\"Loading ds.client.connection.server\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Loading required package: progress\\n\",\"type\":1},{\"output\":\"Loading required package: R6\\n\",\"type\":1},{\"output\":\"Loading required package: opalr\\n\",\"type\":1},{\"output\":\"Loading required package: httr\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Testing ds.client.connection.server\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"Loading required package: bitops\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"[1] \\\"http://192.168.56.100:8080\\\"\\n\",\"type\":1},{\"output\":\"[1] \\\"http://192.168.56.100:8080\\\"\\n\",\"type\":1},{\"output\":\"[1] \\\"setup\\\"\\n\",\"type\":1},{\"output\":\"[1] \\\"http://192.168.56.100:8080\\\"\\n\",\"type\":1},{\"output\":\"[1] \\\"setup finished\\\"\\n\",\"type\":1},{\"output\":\"✔ |  OK [31mF[39m [35mW[39m [34mS[39m | Context\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::correct format::multiple\",\"type\":1},{\"output\":\"\\r⠙ |  12       | ds.build.login.data.frame()::correct format::multiple\\r[32m✔[39m |  36       | ds.build.login.data.frame()::correct format::multiple[36m [0.1 s][39m\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::correct format::single\",\"type\":1},{\"output\":\"\\r[32m✔[39m |  27       | ds.build.login.data.frame()::correct format::single\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::incorrect url::multiple\\r[32m✔[39m |  12       | ds.build.login.data.frame()::incorrect url::multiple\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::incorrect url::single\\r[32m✔[39m |   2       | ds.build.login.data.frame()::incorrect url::single\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::incorrect correct format::multiple\",\"type\":1},{\"output\":\"\\r[32m✔[39m |  12       | ds.build.login.data.frame()::incorrect correct format::multiple\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.build.login.data.frame()::incorrect format::single\\r[32m✔[39m |  10       | ds.build.login.data.frame()::incorrect format::single\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login():incorrect format\",\"type\":1},{\"output\":\"\\r[32m✔[39m |   7       | ds.login():incorrect format\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login():http_connection::multiple\\r[31m✖[39m |   0 1     | ds.login():http_connection::multiple\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"[1mtest-ds_login.R:45: [31mfailure[39m: http connection multiple[22m\\n\",\"type\":1},{\"output\":\"length(connection) == length(server) isn't true.\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login():http_connection::single\",\"type\":1},{\"output\":\"\\r[32m✔[39m |   1       | ds.login():http_connection::single\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login():https_connection::multiple\",\"type\":1},{\"output\":\"\\r[31m✖[39m |   0 1     | ds.login():https_connection::multiple\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"[1mtest-ds_login.R:58: [31merror[39m: https connection multiple[22m\\n\",\"type\":1},{\"output\":\"unused argument (opts)\\n\",\"type\":1},{\"output\":\"1: .test.https.connection.multiple() at /Users/redraven/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds_login.R:58\\n\",\"type\":1},{\"output\":\"2: .make.connection(ds.test_env$login.data, assign = FALSE, ds.test_env$stat.vars, \\\"D\\\")\\n\",\"type\":1},{\"output\":\"3: DSI::datashield.login(login.data.frame, assign, variables, symbol) at /Users/redraven/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/R/ds.login.R:51\\n\",\"type\":1},{\"output\":\"4: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"5: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"6: .local(drv, name, restore, ...)\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login():https_connection::single\",\"type\":1},{\"output\":\"\\r[31m✖[39m |   0 1     | ds.login():https_connection::single\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"[1mtest-ds_login.R:64: [31merror[39m: https connection single[22m\\n\",\"type\":1},{\"output\":\"unused argument (opts)\\n\",\"type\":1},{\"output\":\"1: .test.https.connection.single() at /Users/redraven/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds_login.R:64\\n\",\"type\":1},{\"output\":\"2: .make.connection(ds.test_env$login.data, assign = FALSE, ds.test_env$stat.vars, \\\"D\\\")\\n\",\"type\":1},{\"output\":\"3: DSI::datashield.login(login.data.frame, assign, variables, symbol) at /Users/redraven/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/R/ds.login.R:51\\n\",\"type\":1},{\"output\":\"4: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"5: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"6: .local(drv, name, restore, ...)\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.login()::incorrect_url::single\\r[32m✔[39m |   2       | ds.login()::incorrect_url::single\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.logout():no_connection\\r[32m✔[39m |   1       | ds.logout():no_connection\\n\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.logout():valid_connection\",\"type\":1},{\"output\":\"\\r⠹ |   3       | ds.logout():valid_connection\\r[32m✔[39m |   4       | ds.logout():valid_connection[36m [0.1 s][39m\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"\\r⠏ |   0       | ds.find.variable():no_connection\\r[31m✖[39m |   4 1     | ds.find.variable():no_connection\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"[1mtest-ds.find.variable.R:15: [31merror[39m: (unknown)[22m\\n\",\"type\":1},{\"output\":\"unused argument (opts)\\n\",\"type\":1},{\"output\":\"1: connect.all.datasets() at /Users/redraven/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/tests/testthat/test-ds.find.variable.R:15\\n\",\"type\":1},{\"output\":\"2: log.in.data.server()\\n\",\"type\":1},{\"output\":\"3: datashield.login(logins = ds.test_env$login.data, assign = TRUE, variables = ds.test_env$stats.var)\\n\",\"type\":1},{\"output\":\"4: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"5: dsConnect(drv, name = stdnames[i], username = userids[i], password = pwds[i], token = tokens[i], url = urls[i], opts = conn.opts, restore = restoreId)\\n\",\"type\":1},{\"output\":\"6: .local(drv, name, restore, ...)\\n\",\"type\":1},{\"output\":\"────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"══ [1mResults[22m ═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════\\n\",\"type\":1},{\"output\":\"[36mDuration: 0.7 s[39m\\n\",\"type\":1},{\"output\":\"\\n\",\"type\":1},{\"output\":\"OK:       [32m118[39m\\n\",\"type\":1},{\"output\":\"Failed:   [31m4[39m\\n\",\"type\":1},{\"output\":\"Warnings: [32m0[39m\\n\",\"type\":1},{\"output\":\"Skipped:  [32m0[39m\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
