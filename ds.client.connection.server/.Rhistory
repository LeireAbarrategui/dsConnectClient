print(parse(text=calltext1))
calltext1 <- deparse(as.symbol(paste0("ds.foobar('", a, ")")))
print(parse(text=calltext1))
calltext1 <- deparse(as.symbol(paste0("ds.foobar('", a, "')")))
print(parse(text=calltext1))
Calltext3<- deparse(as.symbol(paste("ds.foobar('", a, "')",sep="")))
print(parse(text=calltext3))
calltext3<- deparse(as.symbol(paste("ds.foobar('", a, "')",sep="")))
print(parse(text=calltext3))
ds.foobar <- function(a) {
calltext1 <- deparse(as.symbol(paste0('ds.foobar(', a, ')')))
print(parse(text=calltext1))
Calltext3<- deparse(as.symbol(paste('ds.foobar(', a, ‘)’,sep=“")))
print(parse(text=calltext3))
calltext2 <- deparse(call('ds.foobar', a))
print(parse(text=calltext2))
}
ds.foobar <- function(a) {
calltext1 <- deparse(as.symbol(paste0('ds.foobar(', a, ')')))
print(parse(text=calltext1))
Calltext3<- deparse(as.symbol(paste('ds.foobar(', a, ‘)’,sep="")))
print(parse(text=calltext3))
calltext2 <- deparse(call('ds.foobar', a))
print(parse(text=calltext2))
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
A <- matrix(c(1:15),3,5)
A
A <- matrix(c(1:15),3,5)
A
M_1 <- matrix(c(101:126),5,5)
M_1
print("master - step 1")
print("master - step 1")
A <- matrix(c(1:15),3,5)
A
M_1 <- matrix(c(101:126),5,5)
M_1
C <- t(M_1) %*% t(A)
C
print("receiver - step 2")
B <- matrix(c(-15:-1),3,5)
B
M_2 <- C
M_2
D <- (M_2) %*% B
D
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
print(T[row,column])
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
print("master - step 1")
A <- matrix(c(1:15),3,5)
print("A")
print(A)
print("masking")
M_1 <- matrix(as.integer(runif(25,1,100)),5,5)
print(M_1)
C <- t(M_1) %*% t(A)
print("C")
print(C)
print("receiver - step 2")
B <- matrix(c(-15:-1),3,5)
print("B")
print(B)
print("M_2")
M_2 <- C
print(M_2)
print("D")
D <- (M_2) %*% B
print(D)
print("master - step 3 - decrypt")
E <- solve(t(M_1)) %*% D
print("E")
print(E)
print(t(A) %*% B)
print("master - step 1")
A <- matrix(c(1:15),3,5)
print("A")
print(A)
print("masking")
M_1 <- matrix(as.integer(runif(25,1,100)),5,5)
print(M_1)
C <- t(M_1) %*% t(A)
print("C")
print(C)
print("receiver - step 2")
B <- matrix(c(-15:-1),3,5)
print("B")
print(B)
print("M_2")
M_2 <- C
print(M_2)
print("D")
D <- (M_2) %*% B
print(D)
print("master - step 3 - decrypt")
E <- solve(t(M_1)) %*% D
print("E")
print(E)
print(t(A) %*% B)
row <- 5
print("row")
print(row)
column <- 3
print("column")
print(column)
print("dot.product")
dot.product <- E[row,column]
print(dot.product)
print("param")
param <- 1000
print(param)
print("encoding ratio")
encoding.ratio <- param/dot.product
print(encoding.ratio)
print("master vector")
master.vector <- A[,column]
print(master.vector)
print("encrypted param")
encrypted.param <- encoding.ratio * master.vector
print(encrypted.param)
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
t(A)[5,] %*% B[,3]
print("receiver - vector")
receiver.vector <- B[row,] #confusing
print(receiver.vector)
print(t(master.vector) %*% receiver.vector)
T <- t(A) %*% B
print(T[row,column])
t(A)[row,]
A[,row]
master.vector
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
diag(1,5,5)
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
A_2 <- matrix(c(-15:-1),3,5)
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
print("master - step 1")
A <- matrix(c(1:15),3,5)
print("A")
print(A)
print("masking")
M_1 <- matrix(as.integer(runif(25,1,100)),5,5)
M_1 <- diag(1,5,5)
print(M_1)
C <- t(M_1) %*% t(A)
print("C")
print(C)
print("receiver - step 2")
B <- matrix(c(20:35),3,5)
print("B")
print(B)
print("M_2")
M_2<- C
print(M_2)
print("D")
D <- (M_2) %*% B
print(D)
print("master - step 3 - decrypt")
E <- solve(t(M_1)) %*% D
print("E")
print(E)
print(t(A) %*% B)
print(t(A) %*% B)
row <- 3
print("row")
print(row)
column <- 3
print("column")
print(column)
print("dot.product")
dot.product <- E[row,column]
print(dot.product)
print("param")
param <- 1000
print(param)
print("encoding ratio")
encoding.ratio <- param/dot.product
print(encoding.ratio)
print("master vector")
master.vector <- A[,column]
print(master.vector)
print("encrypted param")
encrypted.param <- encoding.ratio * master.vector
print(encrypted.param)
print("receiver - vector")
receiver.vector <- B[,row] #confusing
print(receiver.vector)
print(t(master.vector) %*% receiver.vector)
T <- t(A) %*% B
print(T)
print("receiver in master mode")
B_2 <- matrix(c(30:45),3,5)
B_2[,row] <- receiver.vector
print(receiver.vector)
print("B_2")
print(B_2)
print("masking")
M_3 <- matrix(as.integer(runif(25,1,100)),5,5)
M_3 <- diag(1,5,5)
print(M_3)
E <- t(M_3) %*% t(B_2)
print("encoded matrix E")
print(E)
rint("master in receiver mode")
A_2 <- matrix(c(50:65),3,5)
A_2[,column] <- master.vector
print(encrypted.param)
print("A_2")
print(A_2)
print("received matrix")
M_4 <- E
print("M_4")
print(M_4)
F <- M_4 %*% A_2
print(F)
print("receiver in master mode - decrypt")
print(solve(M_3))
decrypted.matrix <- solve(t(M_3)) %*%  F
print(decrypted.matrix)
print("master in receiver mode")
A_2 <- matrix(c(50:65),3,5)
A_2[,column] <- encrypted.param
print(encrypted.param)
print("A_2")
print(A_2)
print("received matrix")
M_4 <- E
print("M_4")
print(M_4)
F <- M_4 %*% A_2
print(F)
print("receiver in master mode - decrypt")
print(solve(M_3))
decrypted.matrix <- solve(t(M_3)) %*%  F
print(decrypted.matrix)
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
source('~/Documents/GitHub/Ranking/sharingSecurely/some_validations.R')
row <- 1
print("row")
print(row)
column <- 5
print("column")
print(column)
print("master - step 1")
A <- matrix(c(1:15),3,5)
print("A")
print(A)
print("masking")
M_1 <- matrix(as.integer(runif(25,1,100)),5,5)
M_1 <- diag(1,5,5)
print(M_1)
C <- t(M_1) %*% t(A)
print("C")
print(C)
print("receiver - step 2")
B <- matrix(c(20:34),3,5)
print("B")
print(B)
print("M_2")
M_2<- C
print(M_2)
print("D")
D <- (M_2) %*% B
print(D)
print("master - step 3 - decrypt")
E <- solve(t(M_1)) %*% D
print("E")
print(E)
print(t(A) %*% B)
dot.product <- E[row,column]
print("***********dot.product******************")
print(dot.product)
print("param")
param <- 1000
print(param)
print("encoding ratio")
encoding.ratio <- param/dot.product
print(encoding.ratio)
print("encoding ratio")
encoding.ratio <- param/dot.product
print(encoding.ratio)
print("master vector")
master.vector <- A[,column]
print(master.vector)
c(13,14,15) * c(20,21,22)
A
B
A[,1] * B[,5]
sum(A[,1] * B[,5])
row <- 1
print("row")
print(row)
column <- 5
print("column")
print(column)
print("master - step 1")
A <- matrix(c(1:15),3,5)
print("A")
print(A)
print("masking")
M_1 <- matrix(as.integer(runif(25,1,100)),5,5)
M_1 <- diag(1,5,5)
print(M_1)
C <- t(M_1) %*% t(A)
print("C")
print(C)
print("receiver - step 2")
B <- matrix(c(20:34),3,5)
print("B")
print(B)
print("M_2")
M_2<- C
print(M_2)
print("D")
D <- (M_2) %*% B
print(D)
print("master - step 3 - decrypt")
E <- solve(t(M_1)) %*% D
print("E")
print(E)
print(t(A) %*% B)
dot.product <- E[row,column]
print("***********dot.product******************")
print(dot.product)
print("param")
param <- 1000
print(param)
print("encoding ratio")
encoding.ratio <- param/dot.product
print(encoding.ratio)
print("master vector")
master.vector <- A[,row]
print(master.vector)
print("encrypted param")
encrypted.param <- encoding.ratio * master.vector
print(encrypted.param)
print("receiver - vector")
receiver.vector <- B[,column] #confusing
print(receiver.vector)
print(t(master.vector) %*% receiver.vector)
T <- t(A) %*% B
print(T)
sum(A[,1] * B[,5])
print("receiver in master mode")
B_2 <- matrix(c(30:44),3,5)
B_2[,row] <- receiver.vector
print(receiver.vector)
print("B_2")
print(B_2)
print("masking")
M_3 <- matrix(as.integer(runif(25,1,100)),5,5)
M_3 <- diag(1,5,5)
print(M_3)
E <- t(M_3) %*% t(B_2)
print("encoded matrix E")
print(E)
print("dot.product")
print(dot.product)
print("master in receiver mode")
A_2 <- matrix(c(50:64),3,5)
A_2[,column] <- encrypted.param
print(encrypted.param)
print("A_2")
print(A_2)
print("received matrix")
M_4 <- E
print("M_4")
print(M_4)
F <- M_4 %*% A_2
print(F)
print("dot.product")
print(dot.product)
print(sum(A_2[,column] * E[row,]))
print("receiver in master mode - decrypt")
print(solve(M_3))
decrypted.matrix <- solve(t(M_3)) %*%  F
print(decrypted.matrix)
library(ds.client.connection.server)
library(ds.client.connection.server)
source('~/Documents/GitHub/ds.client.connection.server/ds.client.connection.server/R/ds.share.param.R')
a <- "djdjd"
as.vector(a)
a
a <- "djdjd"
is.vector(a)
a <- c("ududud", "bbbbb")
class(a)
is.vector(a)
a
toString(a)
dput(a)
a <- "&&&&"
dput(a)
?dput
a <- c("ydydy", "hdhdhd")
paste0("c(",a, ")")
a <- c("ydydy", "hdhdhd")
a
as.character(a)
dput(a)
a <- "ehehehe"
dput(a)
library(ds.client.connection.server)
class(pi)
.share.parameter <- function(connections=NULL,param.names = NULL)
{
if(length(connections) > 1 & is.character(param.names))
{
outcome <- FALSE
if (nchar(param.names) > 0)
{
success <- .assignSettings(connections)
if (success)
{
outcome <- .complete.exchange(connections,param.names)
}
}
else
{
stop("ERR:003")
}
}
else
{
warning("WAR:001")
}
}
library(ds.client.connection.server)
library(ds.client.connection.server)
library(ds.client.connection.server)
library(ds.client.connection.server)
a <- NULL
is.character(a)
library(ds.client.connection.server)
